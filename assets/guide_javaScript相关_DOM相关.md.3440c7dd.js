import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.b6910bb2.js";const h=JSON.parse('{"title":"DOM 相关","description":"","frontmatter":{},"headers":[],"relativePath":"guide/javaScript相关/DOM相关.md","filePath":"guide/javaScript相关/DOM相关.md","lastUpdated":1736852454000}'),o={name:"guide/javaScript相关/DOM相关.md"},e=n(`<h1 id="dom-相关" tabindex="-1">DOM 相关 <a class="header-anchor" href="#dom-相关" aria-label="Permalink to &quot;DOM 相关&quot;">​</a></h1><h2 id="如何阻止事件的冒泡和默认事件" tabindex="-1">如何阻止事件的冒泡和默认事件 <a class="header-anchor" href="#如何阻止事件的冒泡和默认事件" aria-label="Permalink to &quot;如何阻止事件的冒泡和默认事件&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">event.</span><span style="color:#B392F0;">stopPropagation</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 阻止事件冒泡</span></span>
<span class="line"><span style="color:#E1E4E8;">event.</span><span style="color:#B392F0;">preventDefalut</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 阻止默认事件</span></span>
<span class="line"><span style="color:#E1E4E8;">event.</span><span style="color:#B392F0;">stopImmediatePropagation</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 阻止监听同一事件的其他事件监听器被调用</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">event.</span><span style="color:#6F42C1;">stopPropagation</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 阻止事件冒泡</span></span>
<span class="line"><span style="color:#24292E;">event.</span><span style="color:#6F42C1;">preventDefalut</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 阻止默认事件</span></span>
<span class="line"><span style="color:#24292E;">event.</span><span style="color:#6F42C1;">stopImmediatePropagation</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 阻止监听同一事件的其他事件监听器被调用</span></span></code></pre></div><h2 id="查找、添加、删除、移动-dom-节点的方法" tabindex="-1">查找、添加、删除、移动 DOM 节点的方法 <a class="header-anchor" href="#查找、添加、删除、移动-dom-节点的方法" aria-label="Permalink to &quot;查找、添加、删除、移动 DOM 节点的方法&quot;">​</a></h2><ul><li>查询: getElementById、getElementByTagName、getElementByClassName、querySelector、querySelectorAll</li><li>添加: appendChild、insertBefore、insertAfter</li><li>删除: removeChild</li><li>移动: insertBefore、insertAfter</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> imooc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;imooc&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 通过 id 查找</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> pList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementByTagName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;p&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 通过标签名查找 p 标签集合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> imoocList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementByClassName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;imooc&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 查询类名 imooc 类名集合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> imoocList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> docuemnt.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;.imooc&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 查询类名 imooc 的集合</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> imooc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;imooc&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 通过 id 查找</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> pList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementByTagName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;p&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 通过标签名查找 p 标签集合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> imoocList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementByClassName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;imooc&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 查询类名 imooc 类名集合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> imoocList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> docuemnt.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.imooc&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 查询类名 imooc 的集合</span></span></code></pre></div><h2 id="高度相关" tabindex="-1">高度相关 <a class="header-anchor" href="#高度相关" aria-label="Permalink to &quot;高度相关&quot;">​</a></h2><ul><li>offsetHeight: 包含 padding、content、border 和 滚动条</li><li>clientHeight: 包含 padding 和 content</li><li>scrollHeight: 包含 padding 和 内容高度</li></ul><p>判断是否有滚动条 scrollHeight &gt;= clientHeight</p><h2 id="顶部高度" tabindex="-1">顶部高度 <a class="header-anchor" href="#顶部高度" aria-label="Permalink to &quot;顶部高度&quot;">​</a></h2><ul><li>offsetTop: 元素顶部到最近父元素顶部的距离，和有木有滚动条没有关系</li><li>scrollTop: 滚动条滚动的距离</li></ul><h2 id="鼠标事件" tabindex="-1">鼠标事件 <a class="header-anchor" href="#鼠标事件" aria-label="Permalink to &quot;鼠标事件&quot;">​</a></h2><h3 id="按下" tabindex="-1">按下 <a class="header-anchor" href="#按下" aria-label="Permalink to &quot;按下&quot;">​</a></h3><ul><li>click: 点击鼠标左键或按下回车键调用</li><li>dblclick: 双击鼠标左键调用</li><li>mousedown: 鼠标被按下（左键/右键）时触发，不能通过键盘触发。</li><li>mouseup: 鼠标按键被松开时触发，不能通过键盘触发。</li></ul><h3 id="移动" tabindex="-1">移动 <a class="header-anchor" href="#移动" aria-label="Permalink to &quot;移动&quot;">​</a></h3><ul><li>mouseover: 鼠标移入目标元素。鼠标移入子元素也会触发</li><li>mouseout: 鼠标移出目标元素。鼠标移出子元素也会触发</li><li>mouseenter: 鼠标移入目标元素。鼠标移入子元素不会触发</li><li>mouseleave: 鼠标移出目标元素。鼠标移出子元素不会触发</li><li>mousemove: 鼠标在目标元素内移动时触发，不能通过键盘触发。</li></ul>`,16),p=[e];function t(c,r,i,y,E,d){return a(),l("div",null,p)}const u=s(o,[["render",t]]);export{h as __pageData,u as default};
