import{_ as s}from"./chunks/container.fad5294e.js";import{o as a,c as n,H as l,Q as o}from"./chunks/framework.b6910bb2.js";const p=o(`<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p>Fabric.js 是一个强大而简单的 Canvas 画布库</p><p>可以提供简单的 API 来创建和编辑复杂的图形</p><h1 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h1><h2 id="创建画布" tabindex="-1">创建画布 <a class="header-anchor" href="#创建画布" aria-label="Permalink to &quot;创建画布&quot;">​</a></h2><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- HTML --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">canvas</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;canvas&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">canvas</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- HTML --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">canvas</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;canvas&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">canvas</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// JavaScript</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">canvas</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> fabric.</span><span style="color:#B392F0;">Canvas</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;canvas&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">canvas</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> fabric.</span><span style="color:#6F42C1;">Canvas</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;canvas&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="添加图形到画布" tabindex="-1">添加图形到画布 <a class="header-anchor" href="#添加图形到画布" aria-label="Permalink to &quot;添加图形到画布&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">canvas.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> fabric.</span><span style="color:#B392F0;">Rect</span><span style="color:#E1E4E8;">({ left: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, top: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, fill: </span><span style="color:#9ECBFF;">&#39;red&#39;</span><span style="color:#E1E4E8;">, width: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, height: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> }));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">canvas.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> fabric.</span><span style="color:#6F42C1;">Rect</span><span style="color:#24292E;">({ left: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, top: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, fill: </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;">, width: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, height: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> }));</span></span></code></pre></div><p>通过案例可以感受到，如果你需要用 HTML Canvas 来绘制一些东西，并且这些东西可以响应用户的交互，比如：拖动、变形、旋转等 操作。 那用 fabric.js 是非常合适的，因为它内部不仅实现了 Canvas 对象模型，还将一些常用的交互操作封装好了，可以说是开箱即用。</p>`,10),y=JSON.parse('{"title":"简介","description":"","frontmatter":{"aside":false,"outline":false},"headers":[],"relativePath":"guide/Fabric.js/基本概念.md","filePath":"guide/Fabric.js/基本概念.md","lastUpdated":1737448252000}'),e={name:"guide/Fabric.js/基本概念.md"},d=Object.assign(e,{setup(t){return(c,r)=>(a(),n("div",null,[p,l(s,{url:"https://enson0131.github.io/mini-fabric-whiteboard/"})]))}});export{y as __pageData,d as default};
