import{_ as l,o as a,c as i,Q as e}from"./chunks/framework.b6910bb2.js";const t="/vitePress-blob/assets/13.1322b23d.jpg",C=JSON.parse('{"title":"CDN","description":"","frontmatter":{},"headers":[],"relativePath":"guide/网络相关/CDN.md","filePath":"guide/网络相关/CDN.md","lastUpdated":1708096691000}'),o={name:"guide/网络相关/CDN.md"},r=e('<h1 id="cdn" tabindex="-1">CDN <a class="header-anchor" href="#cdn" aria-label="Permalink to &quot;CDN&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>内容分发网络，利用最靠近用户的服务器，将资源更快更可靠的给到用户</p><h2 id="组成" tabindex="-1">组成 <a class="header-anchor" href="#组成" aria-label="Permalink to &quot;组成&quot;">​</a></h2><ol><li><p>分发服务系统</p><p>最小单位是 Cache 设备</p><ul><li>响应用户请求</li><li>与源站点进行资源同步</li></ul></li><li><p>负载均衡系统</p><p>负责对用户的请求进行调度</p></li><li><p>运营管理系统</p><p>负责业务层面与外界系统的交互所需要的收集、整理、交付等工作 （为了做闭环）</p><p>运营管理子系统 网络管理子系统</p></li></ol><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><p>托管 web 资源，加速 web 资源的获取速度</p><h3 id="性能方面" tabindex="-1">性能方面 <a class="header-anchor" href="#性能方面" aria-label="Permalink to &quot;性能方面&quot;">​</a></h3><ol><li>用户从最近的 CDN 站点获取资源，访问速度更快</li><li>突破 TCP 只有同域名下只有 6 个的限制</li><li>减少源服务器的负担</li></ol><h3 id="安全方面" tabindex="-1">安全方面 <a class="header-anchor" href="#安全方面" aria-label="Permalink to &quot;安全方面&quot;">​</a></h3><ol><li>针对 DDos: 通过监控分析异常流量，限制请求频率</li><li>针对 MITM: 从源服务器到 CDN 节点到 ISP (Internet Service Provider, 网络运营提供商)，全链路 HTTPS 通信</li></ol><h2 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-label="Permalink to &quot;工作原理&quot;">​</a></h2><h3 id="没有使用-cdn-过程" tabindex="-1">没有使用 CDN 过程 <a class="header-anchor" href="#没有使用-cdn-过程" aria-label="Permalink to &quot;没有使用 CDN 过程&quot;">​</a></h3><ol><li>浏览器通过 DNS 对域名进行解析，得到此域名对应的 IP 地址</li><li>浏览器根据得到的 IP 地址，向域名的服务主机发送数据请求</li><li>服务器向浏览器返回响应数据</li></ol><h3 id="使用了-cdn-过程" tabindex="-1">使用了 CDN 过程 <a class="header-anchor" href="#使用了-cdn-过程" aria-label="Permalink to &quot;使用了 CDN 过程&quot;">​</a></h3><ol><li><p>获取负载均衡服务器 IP 地址 （自底向上）</p><ul><li><ol><li>数据的 URL 先进行 DNS 系统解析，发现该 URL 对应的是一个 CDN 专用的 DNS 服务器，DNS 系统就会将域名解析权交给 CNAME 指向的 CDN 专用的 DNS 服务器</li></ol></li><li><ol start="2"><li>CDN 专用的 DNS 服务器将 CDN 全局负载均衡设备 IP 地址返回给用户</li></ol></li><li><ol start="3"><li>用户向 CDN 的全局负载均衡设备发起数据请求</li></ol></li></ul></li><li><p>获取目标缓存服务器 IP 地址 （自顶向下）</p><ul><li><ol start="4"><li>CDN 全局负载均衡设备根据用户 IP 地址以及用户请求的 URL，选择一台用户所属区域的负载均衡设备</li></ol></li><li><ol start="5"><li>区域负责均衡设备选择一台适合的缓存服务器来提供服务，将该缓存服务器的 IP 地址返回给全局负载均衡设备</li></ol></li><li><ol start="6"><li>全局负载均衡设备把服务器 IP 地址返回给用户</li></ol></li></ul></li><li><p>用户发起请求获取</p><ul><li>用户向该缓存服务器发起请求，缓存服务器响应用户的请求，将用户所需内容发送支用户终端 （如果缓存服务器没有用户想要的内容，那么缓存服务器会穿透 CDN 集群往源服务器获取设备）</li></ul></li></ol><p><img src="'+t+'" alt="流程"></p><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><ol><li>使用第三方 CDN 服务 （例如开源框架可以使用第三方 CDN 服务，如 React、Vue、JQuery）</li><li>使用 CDN 进行静态资源的缓存 （将网站的资源放在 CDN 上）</li><li>直播传送 （直播本质也是使用流媒体进行传送，CDN 也支持流媒体传送，所以直播完全可以使用 CDN 来提高访问速度）</li></ol>',19),h=[r];function n(d,s,c,p,u,D){return a(),i("div",null,h)}const _=l(o,[["render",n]]);export{C as __pageData,_ as default};
